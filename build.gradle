// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.2'
        classpath "io.realm:realm-gradle-plugin:1.2.0"
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath 'me.tatarka.retrolambda.projectlombok:lombok.ast:0.2.3.a2'
        classpath 'me.tatarka:gradle-retrolambda:3.3.0-beta4'
        classpath 'io.fabric.tools:gradle:1.+'
        classpath 'com.google.gms:google-services:3.0.0'

    }
    // Exclude the lombok version that the android plugin depends on.
    configurations.classpath.exclude group: 'com.android.tools.external.lombok'
}

allprojects {
    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
        maven {
            url "https://raw.githubusercontent.com/layerhq/releases-android/master/releases/"
        }
    }


}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    compileSdkVersion = 23
    buildToolsVersion = '23.0.2'
    minSdkVersion = 16
    targetSdkVersion = 23

    /*Compiles*/
    DEPENDENCY_INJECTION = [
            dagger     : 'com.google.dagger:dagger:2.6',
            apt        : 'com.google.dagger:dagger-compiler:2.6',
            annotations: 'org.glassfish:javax.annotation:10.0-b28'
    ]

}
boolean isApp
final String CORE_LIB_NAME = 'core'
final String UTILS = 'utils'
final String ATLAS = 'layer-atlas'
//final String COLLAPSE_VIEW = 'CollapseCalendarView'
final String LIB_PLUGIN = 'com.android.library'
final String APP_PLUGIN = 'com.android.application'

subprojects {


    if (!projectDir.name.equals(CORE_LIB_NAME)
            && !projectDir.name.equals(UTILS)
            && !projectDir.name.equals(ATLAS)) {
        isApp = true
    } else {
        isApp = false
    }
    if (isApp) {
        apply plugin: APP_PLUGIN

    } else {
        apply plugin: LIB_PLUGIN
    }
    dependencies {
        apply plugin: 'com.neenbedankt.android-apt'
        compile DEPENDENCY_INJECTION.dagger
        apt DEPENDENCY_INJECTION.apt
        provided DEPENDENCY_INJECTION.annotations


    }
    repositories {
        if (isApp) {

        }
    }


}
